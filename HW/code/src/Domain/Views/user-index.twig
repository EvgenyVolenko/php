{% if user_role %}
  <a href="/user/edit" class="d-block text-end">Добавить пользователя</a>
{% endif %}

<h3>Список пользователей в хранилище</h3>

<div class="table-responsive small">
  <table class="table table-striped table-sm">
    <thead>
      <tr>
        <th scope="cole">ID</th>
        <th scope="cole">Имя</th>
        <th scope="cole">Фамилия</th>
        <th scope="cole">Дата рождения</th>
      </tr>
    </thead>
    <tbody>
      {% for user in users %}
        <tr id="{{ user.getUserId() }}">
          <td>{{ user.getUserId() }}</td>
          <td>{{ user.getUserName() }}</td>
          <td>{{ user.getUserLastName() }}</td>
          <td>
            {% if user.getUserBirthday() is empty %}
              <b>не установлен</b>
            {% else %}
              {{ user.getUserBirthday()|date('d.m.Y') }}
            {% endif %}
          </td>
          {% if user_role %}
            <td>
              <a href="user/edit/?id={{ user.getUserId() }}" style="text-decoration: none; color:chocolate;">Изменить</a>
            </td>
            <td>
              <a id="deletUser" href="#" style="text-decoration: none; color:red;">Удалить</a>
            </td>
          {% endif %}
        </tr>
      {% endfor %}
    </tbody>
  </table>
</div>

<script>
  function isJson(item) {
    let value = typeof item !== 'string' ? JSON.stringify(item) : item
    try {
      value = JSON.parse(value)
    } catch (e) {
      return false
    }
    return typeof value === 'object' && value !== null
  }
  
  const allElems = document.querySelectorAll('#deletUser')
  
  allElems.forEach((element) => {
    element.addEventListener('click', async function () {
      const idUser = element.parentElement.parentElement.id
      const response = await fetch(`/user/delete/?id=${idUser}`)
      const answer = await response.json()
      if (isJson(answer)) {
        alert(answer.answer)
        await element.parentElement.parentElement.remove()
      } else {
        alert(answer)
      }
    })
  })
  
  let maxId = jQuery('.table-responsive tbody tr:last-child td:first-child').html()
  
  setInterval(() => {
    jQuery
      .ajax({
        method: 'POST',
        url: 'user/indexRefresh/',
        data: { maxId: maxId }
      })
      .done((response) => {
        //data - JSON response
        //0 => [userid, username, userlastname, userbirthday]
  
        let users = jQuery.parseJSON(response)
  
        if (users.length != 0) {
          for (const k in users) {
            let row = '<tr>'
            row += '<td>' + users[k].userid + '</td>'
            maxId = users[k].userid
            row += '<td>' + users[k].username + '</td>'
            row += '<td>' + users[k].userlastname + '</td>'
            row += '<td>' + users[k].userbirthday + '</td>'
            row += '</tr>'
  
            jQuery('.content-template tbody').append(row)
          }
        }
      })
  }, 5000)
</script>
